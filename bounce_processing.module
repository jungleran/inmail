<?php
/**
 * @file
 * Main procedural code file for the Bounce Processing module.
 */

/**
 * Implements hook_mail_alter().
 */
function bounce_processing_mail_alter(&$message) {
  if (\Drupal::config('bounce_processing.settings')->get('verp')) {
    bounce_processing_mail_alter_VERP($message);
  }
}

/**
 * Modifies the Return-Path value to include the recipient's address.
 *
 * The technique is called Variable Envelope Return Path (VERP) and enables easy
 * identification of the intended recipient for incoming bounce messages. That
 * identification happens in VERPAnalyzer.
 *
 * @see \Drupal\bounce_processing\MessageAnalyzer\VERPAnalyzer
 */
function bounce_processing_mail_alter_VERP(&$message) {
  // Identify current Return-Path value.
  // @todo Make Return-Path base address configurable.
  $site_mail = \Drupal::config('system.site')->get('mail');
  $return_path = $message['headers']['Return-Path'];
  if ($site_mail != $return_path) {
    // Return-Path has been altered already, let's bail.
    return;
  }

  // Include recipient address in Return-Path value.
  // @todo Handle multiple recipients and "Foo <a@b.c>" format.
  if ($return_path) {
    $to = str_replace('@', '=', $message['to']);
    $message['headers']['Return-Path'] = preg_replace('/@/', "+$to@", $return_path);
  }
}
