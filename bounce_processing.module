<?php
/**
 * @file
 * Main procedural code file for the Bounce Processing module.
 */

/**
 * Implements hook_mail_alter().
 */
function bounce_processing_mail_alter(&$message) {
  if (\Drupal::config('bounce_processing.settings')->get('verp')) {
    bounce_processing_mail_alter_VERP($message);
  }
}

/**
 * Modifies the Return-Path value to include the recipient's address.
 *
 * The technique is called Variable Envelope Return Path (VERP) and enables easy
 * identification of the intended recipient for incoming bounce messages. That
 * identification happens in VERPAnalyzer.
 *
 * @see \Drupal\bounce_processing\MessageAnalyzer\VERPAnalyzer
 * @see bounce_processing_generate_VERP()
 */
function bounce_processing_mail_alter_VERP(&$message) {
  // Identify current Return-Path value.
  // @todo Make Return-Path base address configurable.
  $site_mail = \Drupal::config('system.site')->get('mail');
  $return_path = $message['headers']['Return-Path'];
  if ($site_mail != $return_path) {
    // Return-Path has been altered already, let's bail.
    return;
  }

  // Include recipient address in Return-Path value.
  // @todo Handle multiple recipients and "Foo <a@b.c>" format.
  if ($return_path) {
    $message['headers']['Return-Path'] = bounce_processing_generate_VERP($return_path, $message['to']);
  }
}

/**
 * Generates a VERP Return-Path address.
 *
 * Variable Envelope Return Path (VERP) is a method to reliably identify the
 * target recipient when analyzing a bounce message.
 *
 * The Return-Path header for outgoing messages is set to an address that
 * includes the address of the target recipient:
 * @code
 * bounce-mailbox '+' target-mailbox '=' target-host '@' bounce-host
 * @endcode
 * In other words, the recipient's address is appended to the Return-Path
 * address mailbox part, with a preceding '+' and with its '@' character
 * replaced by '='.
 *
 * Appending with '+' is known as "subaddress extension" and is described in
 * RFC 5233. Commonly, messages to foo+anything@example.com are delivered
 * directly to foo@example.com. Note that support for subaddress extension is
 * limited among mail services.
 *
 * @param string $return_path
 *   The original Return-Path address.
 * @param string $recipient
 *   The address of the recipient.
 *
 * @return string
 *   The modified Return-Path address.
 */
function bounce_processing_generate_VERP($return_path, $recipient) {
  $to = str_replace('@', '=', $recipient);
  return str_replace('@', "+$to@", $return_path);
}
